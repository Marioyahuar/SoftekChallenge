version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: starwars-pokemon-mysql
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: starwars_pokemon_db
      MYSQL_USER: api_user
      MYSQL_PASSWORD: api_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./src/infrastructure/adapters/database/mysql/migrations:/docker-entrypoint-initdb.d
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  redis:
    image: redis:7-alpine
    container_name: starwars-pokemon-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      timeout: 20s
      retries: 10

  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: starwars-pokemon-app
    environment:
      DB_HOST: mysql
      DB_NAME: starwars_pokemon_db
      DB_USER: api_user
      DB_PASSWORD: api_password
      DB_PORT: 3306
      REDIS_HOST: redis
      REDIS_PORT: 6379
      NODE_ENV: development
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: npm run dev

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local